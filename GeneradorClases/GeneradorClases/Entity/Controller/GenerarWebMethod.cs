using GeneradorClases.Entity.Model;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace GeneradorClases.Entity.Controller
{
    public class GenerarWebMethod
    {
        public static void generarWebMethodAspx(string nombreProyecto, string nombreEntidad, string nombreTablaAClase,  string direccionDestino, ref string error)
        {
            if (!Directory.Exists(direccionDestino))
            {
                System.IO.Directory.CreateDirectory(direccionDestino);
            }

            string directorioModelo = direccionDestino + "\\WebMethod";
            string nombreClaseController = getNombreClaseController(nombreTablaAClase);
            string nombreClaseViewModel = getNombreClaseModel(nombreTablaAClase);
            string nombreLowet = getLowerName(nombreTablaAClase);
            string listadoAtributosSelect = "";
            List<string> lineasDocumento = new List<string>();

            lineasDocumento.Add(string.Format("<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"{0}.aspx.cs\" Inherits=\"{1}.WebMethods.{0}\" %>",nombreLowet,nombreProyecto));
            lineasDocumento.Add("<!DOCTYPE html>");
            lineasDocumento.Add("<html xmlns=\"http://www.w3.org/1999/xhtml\">");
            lineasDocumento.Add("<head runat=\"server\">");
            lineasDocumento.Add("<meta http-equiv=\"Content - Type\" content=\"text / html; charset = utf - 8\"/>");
            lineasDocumento.Add("<title></title>");
            lineasDocumento.Add("</head>");
            lineasDocumento.Add("<body>");
            lineasDocumento.Add("<form id=\"form1\" runat=\"server\">");
            lineasDocumento.Add("<div>");
            lineasDocumento.Add("</div>");
            lineasDocumento.Add("</form>");
            lineasDocumento.Add("</body>");
            lineasDocumento.Add("</html>");

            if (!Directory.Exists(directorioModelo))
            {
                System.IO.Directory.CreateDirectory(directorioModelo);
            }
            File.WriteAllLines(directorioModelo + "\\" + nombreLowet + ".aspx", lineasDocumento);
        }

        public static void generarWebMethodAspxDesig(string nombreProyecto, string nombreEntidad, string nombreTablaAClase,  string direccionDestino, ref string error)
        {
            if (!Directory.Exists(direccionDestino))
            {
                System.IO.Directory.CreateDirectory(direccionDestino);
            }

            string directorioModelo = direccionDestino + "\\WebMethod";
            string nombreClaseController = getNombreClaseController(nombreTablaAClase);
            string nombreClaseViewModel = getNombreClaseModel(nombreTablaAClase);
            string nombreLowet = getLowerName(nombreTablaAClase);
            string listadoAtributosSelect = "";
            List<string> lineasDocumento = new List<string>();

            lineasDocumento.Add("//------------------------------------------------------------------------------");
            lineasDocumento.Add("// <auto-generated>");
            lineasDocumento.Add("//     Este código fue generado por herramienta.");
            lineasDocumento.Add("//");
            lineasDocumento.Add("//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si");
            lineasDocumento.Add("//     se regenera el código.");
            lineasDocumento.Add("// </auto-generated>");
            lineasDocumento.Add("//------------------------------------------------------------------------------");
            lineasDocumento.Add("");
            lineasDocumento.Add(string.Format("namespace {0}.WebMethods)",nombreProyecto));
            lineasDocumento.Add("{");
            lineasDocumento.Add(string.Format("public partial class {0}",nombreLowet));
            lineasDocumento.Add("{");
            lineasDocumento.Add(" /// <summary>");
            lineasDocumento.Add("/// control form1.");
            lineasDocumento.Add("/// </summary>");
            lineasDocumento.Add("/// <remarks>");
            lineasDocumento.Add("/// Campo generado automáticamente.");
            lineasDocumento.Add("/// Para modificarlo, mueva la declaración del campo del archivo del diseñador al archivo de código subyacente.");
            lineasDocumento.Add("/// </remarks>");
            lineasDocumento.Add("protected global::System.Web.UI.HtmlControls.HtmlForm form1;");
            lineasDocumento.Add("}");
            lineasDocumento.Add("}");


            if (!Directory.Exists(directorioModelo))
            {
                System.IO.Directory.CreateDirectory(directorioModelo);
            }
            File.WriteAllLines(directorioModelo + "\\" + nombreLowet + ".aspx.designer.cs", lineasDocumento);
        }

        public static void generarWebMethodCs(string nombreProyecto, string nombreEntidad, string nombreTablaAClase, List<DatosColumna> listadoColumnas, string direccionDestino, ref string error)
        {
            if (!Directory.Exists(direccionDestino))
            {
                System.IO.Directory.CreateDirectory(direccionDestino);
            }

            string directorioModelo = direccionDestino + "\\WebMethod";
            string nombreClaseController = getNombreClaseController(nombreTablaAClase);
            string nombreClaseViewModel = getNombreClaseModel(nombreTablaAClase);
            string nombreLowet = getLowerName(nombreTablaAClase);
            string listadoAtributosSelect = "";
            List<string> lineasDocumento = new List<string>();

            lineasDocumento.Add("using System;");
            lineasDocumento.Add("using System.Collections.Generic;");
            lineasDocumento.Add("using System.Linq;");
            lineasDocumento.Add("using System.Text;");
            lineasDocumento.Add("using System.Web.Script.Serialization;");
            lineasDocumento.Add("using System.Web.Services;");
            lineasDocumento.Add("using System.Threading.Tasks;");           
            lineasDocumento.Add("");
            lineasDocumento.Add(string.Format("namespace {0}.WebMethods", nombreProyecto));
            lineasDocumento.Add("{");
            lineasDocumento.Add(string.Format("public partial class {0} : System.Web.UI.Page", nombreLowet));
            lineasDocumento.Add("{");
            lineasDocumento.Add("protected void Page_Load(object sender, EventArgs e)");
            lineasDocumento.Add("{");
            lineasDocumento.Add("}");
            lineasDocumento.Add("");
            lineasDocumento.Add("[WebMethod]");
            lineasDocumento.Add(string.Format("public static Result getLista{0}(int registroPartida, int totalAExtraer, int usuarioId)", nombreTablaAClase));
            lineasDocumento.Add("{");
            lineasDocumento.Add("Result r = ValidateSession.validarSession(usuarioId, HttpContext.Current.Session[\"usuarioId\"]);");
            lineasDocumento.Add("if (r.error != \"\")");
            lineasDocumento.Add("{");
            lineasDocumento.Add("return r;");
            lineasDocumento.Add("}");
            lineasDocumento.Add("int totalRegistros = 0;");
            lineasDocumento.Add(string.Format("List<{0}> lst = new List<{0}>();", nombreClaseViewModel));
            lineasDocumento.Add("try");
            lineasDocumento.Add("{");
            lineasDocumento.Add(string.Format("lst = {0}.getLista{1}();", nombreClaseController,nombreTablaAClase));
            lineasDocumento.Add("totalRegistros = lst.Count();");
            lineasDocumento.Add("totalAExtraer = (lst.Count() - registroPartida) < totalAExtraer ? (lst.Count() - registroPartida) : totalAExtraer;");
            lineasDocumento.Add("}");
            lineasDocumento.Add("catch (Exception e)");
            lineasDocumento.Add("{");
            lineasDocumento.Add("return new Result() { error = e.Message, id = 0, tipoAlerta = \"warning\" };");
            lineasDocumento.Add("}");
            lineasDocumento.Add("return new Result() { error = \"\", getCadena = new JavaScriptSerializer().Serialize(lst.GetRange(registroPartida, totalAExtraer)), totalRegistros = totalRegistros };");
            lineasDocumento.Add("}");
            lineasDocumento.Add("");
            //guardar
            lineasDocumento.Add("[WebMethod(EnableSession= true)]");
            string paramsGuardar = "";
            foreach (DatosColumna item in listadoColumnas)
            {
                string isNulable = item.esNulable == "1" ? "?" : "";
                switch (item.tipoDatoColumna.ToLower())
                {
                    case "decimal":
                    case "money":
                        paramsGuardar += string.Format("decimal{0} {1},", isNulable, item.nombreColumna);
                        break;
                    case "numeric":
                        paramsGuardar += string.Format("double{0} {1},", isNulable, item.nombreColumna);
                        break;
                    case "smallint":
                    case "tinyint":
                    case "int":
                        paramsGuardar += string.Format("int{0} {1},", isNulable, item.nombreColumna);
                        break;
                    case "ntext":
                    case "nvarchar":
                    case "char":
                    case "nchar":
                    case "varchar":
                        paramsGuardar += string.Format("string {1},", isNulable, item.nombreColumna);
                        break;
                    case "datetime":
                        paramsGuardar += string.Format("DateTime{0} {1},", isNulable, item.nombreColumna);
                        break;
                    case "float":
                    case "real":
                        paramsGuardar += string.Format("float{0} {1},", isNulable, item.nombreColumna);
                        break;
                    case "bigint":
                        paramsGuardar += string.Format("long{0} {1},", isNulable, item.nombreColumna);
                        break;
                    case "bit":
                        paramsGuardar += string.Format("bool{0} {1},", isNulable, item.nombreColumna);
                        break;
                }
            }
            paramsGuardar = paramsGuardar.Substring(0, paramsGuardar.Length - 1);
            lineasDocumento.Add(string.Format("public static Result guardar({0})", paramsGuardar));
            lineasDocumento.Add("{");
            lineasDocumento.Add("Result r = ValidateSession.validarSession(usuarioId, HttpContext.Current.Session[\"usuarioId\"]);");
            lineasDocumento.Add("if (r.error != \"\")");
            lineasDocumento.Add("{");
            lineasDocumento.Add("return r;");
            lineasDocumento.Add("}");
            lineasDocumento.Add(string.Format("{0} objEntity = new {0}();", nombreTablaAClase, nombreTablaAClase.ToLower()));
            foreach (DatosColumna item in listadoColumnas)
            {
                lineasDocumento.Add(string.Format("objEntity.{0} = {0};", item.nombreColumna));
            }

            lineasDocumento.Add("try");
            lineasDocumento.Add("{");
            lineasDocumento.Add(string.Format("return {0}.guardar{1}(objEntity);", nombreClaseController, nombreTablaAClase));
            lineasDocumento.Add("}");
            lineasDocumento.Add("catch (Exception ex)");
            lineasDocumento.Add("{");
            lineasDocumento.Add("return new Result() { error = ex.Message, id = 0, tipoAlerta = \"warning\" };");
            lineasDocumento.Add("}");
            lineasDocumento.Add("}");
            //finguardar

            lineasDocumento.Add("[WebMethod(EnableSession = true)]");
            lineasDocumento.Add("public static Result eliminar(int id, int usuarioId)");
            lineasDocumento.Add("{");
            lineasDocumento.Add("Result r = ValidateSession.validarSession(usuarioId, HttpContext.Current.Session[\"usuarioId\"]);");
            lineasDocumento.Add("if (r.error != \"\")");
            lineasDocumento.Add("{");
            lineasDocumento.Add("return r;");
            lineasDocumento.Add("}");
            lineasDocumento.Add("");
            lineasDocumento.Add("try");
            lineasDocumento.Add("{");
            lineasDocumento.Add(string.Format("return {0}.eliminar{1}(id, usuarioId);", nombreClaseController, nombreTablaAClase));
            lineasDocumento.Add("}");
            lineasDocumento.Add("catch (Exception ex)");
            lineasDocumento.Add("{");
            lineasDocumento.Add("return new Result() { error = ex.Message, id = 0, tipoAlerta = \"warning\" };");
            lineasDocumento.Add("}");
            lineasDocumento.Add("}");
            lineasDocumento.Add("}");
            lineasDocumento.Add("}");


            if (!Directory.Exists(directorioModelo))
            {
                System.IO.Directory.CreateDirectory(directorioModelo);
            }
            File.WriteAllLines(directorioModelo + "\\" + nombreLowet + ".aspx.cs", lineasDocumento);
        }

        private static string getNombreClaseController(string nombreTablasAClase)
        {
            string caracterInicial = nombreTablasAClase.Remove(0).ToUpper();
            return caracterInicial + nombreTablasAClase + "Controller";
        }

        private static string getNombreClaseModel(string nombreTablasAClase)
        {
            string caracterInicial = nombreTablasAClase.Remove(0).ToUpper();
            return caracterInicial + nombreTablasAClase + "ViewModel";
        }

        private static string getLowerName(string nombreTablasAClase)
        {
            string caracterInicial = nombreTablasAClase.Remove(1).ToLower();
            return caracterInicial + nombreTablasAClase.Substring(1, nombreTablasAClase.Length-1);
        }

    }
}
